DECLARE
  V_PREV_B_ID     BENEFIT_HISTORY.BENEFIT_ID%TYPE;
  V_B_ID          BENEFIT_HISTORY.BENEFIT_ID%TYPE;
  V_PREV_B_STATUS BENEFIT_HISTORY.CURRENT_STATUS_ID%TYPE;
  V_B_STATUS      BENEFIT_HISTORY.CURRENT_STATUS_ID%TYPE;
  V_ROW           BENEFIT_HISTORY%ROWTYPE;
  V_IS_CHANGED    BOOLEAN;
  V_COUNT         NUMBER;
  CURSOR V_CUR IS
    SELECT * FROM BENEFIT_HISTORY BH WHERE BH.INSERT_DATE >= TO_DATE('01/01/2013', 'MM/DD/YYYY') ORDER BY BH.BENEFIT_ID, BH.INSERT_DATE;
BEGIN
  V_PREV_B_ID     := 0;
  V_B_ID          := 0;
  V_PREV_B_STATUS := 0;
  V_B_STATUS      := 0;
  V_COUNT         := 0;
  V_IS_CHANGED    := FALSE;
  OPEN V_CUR;
  LOOP
    FETCH V_CUR
      INTO V_ROW;
    EXIT WHEN V_CUR%NOTFOUND;
    V_B_ID     := V_ROW.BENEFIT_ID;
    V_B_STATUS := V_ROW.CURRENT_STATUS_ID;
  
    IF V_B_ID != V_PREV_B_ID THEN
      V_IS_CHANGED := FALSE;
    END IF;
  
    IF V_B_ID = V_PREV_B_ID AND V_B_STATUS != V_PREV_B_STATUS THEN
      IF V_IS_CHANGED THEN
        DBMS_OUTPUT.PUT_LINE('BENEFIT_ID = ' || V_ROW.BENEFIT_ID || ' V_B_STATUS = ' || V_B_STATUS);
      ELSE
        V_IS_CHANGED := TRUE;
      END IF;
    END IF;
  
    V_PREV_B_ID     := V_B_ID;
    V_PREV_B_STATUS := V_B_STATUS;
  
    V_COUNT := V_COUNT + 1;
  END LOOP;
  CLOSE V_CUR;
  DBMS_OUTPUT.PUT_LINE('V_COUNT = ' || V_COUNT);
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('throw exception: others');
END;
