CREATE OR REPLACE PROCEDURE PROC2 AS
  ATTENDANCE_ID     NUMBER;
  COUNT_TRX         NUMBER;
  SETTLED_COUNT_TRX NUMBER;
  V_ROW             ATTENDANCE_ROLLUP%ROWTYPE;
  UPDATE_SQL        VARCHAR2(200);
  CURSOR V_CUR IS(
    SELECT AR.*
    FROM   ATTENDANCE_ROLLUP AR, ATTENDANCE A
    WHERE  AR.ATTENDANCE_ID = A.ATTENDANCE_ID
    AND    A.ATTENDANCE_SETTLE_STATUS != 52
    AND    ROWNUM <= 1000000);
BEGIN
  COUNT_TRX         := 0;
  ATTENDANCE_ID     := 0;
  SETTLED_COUNT_TRX := 0;
  UPDATE_SQL        := 'UPDATE ATTENDANCE a SET a.attendance_settle_status = 52 WHERE a.attendance_id = :1 ';
  OPEN V_CUR;
  LOOP
    FETCH V_CUR
      INTO V_ROW;
    EXIT WHEN V_CUR%NOTFOUND;
    ATTENDANCE_ID := V_ROW.ATTENDANCE_ID;
    COUNT_TRX     := COUNT_TRX + 1;
    EXECUTE IMMEDIATE UPDATE_SQL
      USING ATTENDANCE_ID;
    -- DBMS_OUTPUT.PUT_LINE('UPDATE_SQL = ' || UPDATE_SQL);
    -- DBMS_OUTPUT.PUT_LINE('ATTENDANCE_ID = ' || ATTENDANCE_ID);
  END LOOP;
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('COUNT_TRX = ' || COUNT_TRX);
  CLOSE V_CUR;
  SELECT COUNT(*)
  INTO   SETTLED_COUNT_TRX
  FROM   ATTENDANCE A
  WHERE  A.ATTENDANCE_SETTLE_STATUS = 5;
  DBMS_OUTPUT.PUT_LINE('SETTLED_COUNT_TRX = ' || SETTLED_COUNT_TRX);
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    DBMS_OUTPUT.PUT_LINE('throw exception: others');
END;
/
